// ===================================================================
// 🎯 ÖMER GÜLLÜ SİSTEMİ - BEST PRACTICE SCHEMA
// CSV Verilerine Uygun Tasarım - 2025
// ===================================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===================================================================
// 👤 USER MANAGEMENT & AUTHENTICATION
// ===================================================================

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String? @unique
  password String

  // Unique Personel ID - DEĞİŞTİRİLEMEZ!
  personelId String @unique // P001, P002, P003... (CSV'den veya otomatik)

  // Profile Info  
  ad      String
  soyad   String?
  telefon String?

  // Work Info
  subeId      Int?
  sube        Sube?       @relation(fields: [subeId], references: [id])
  rol         PersonelRol @default(PERSONEL)
  gunlukUcret Float?      @default(0)
  sgkDurumu   SgkDurumu   @default(YOK)
  girisYili   DateTime?   
  aktif       Boolean     @default(true)
  erpDurum    ErpDurum    @default(AKTIF)

  // Relations
  olusturduguSiparisler           Siparis[]      @relation("SiparisOlusturan")
  onayladigiSiparisler            Siparis[]      @relation("SiparisOnaylayan")
  stokHareketleri                 StokHareket[]
  olusturduguStokTransferleri     StokTransfer[] @relation("StokTransferOlusturan")
  gonderdigiStokTransferleri      StokTransfer[] @relation("StokTransferGonderen")
  teslimAldığıStokTransferleri StokTransfer[] @relation("StokTransferTeslimAlan")
  cariOdemeler                    CariOdeme[]
  cariHareketler                  CariHareket[]

  // Audit Relations - KİM NEYİ DEĞİŞTİRDİ TAKİBİ
  auditLogs            AuditLog[] @relation("PersonelAuditLogs")
  siparisLastModified  Siparis[]  @relation("SiparisLastModifiedBy")
  urunLastModified     Urun[]     @relation("UrunLastModifiedBy")
  cariLastModified     Cari[]     @relation("CariLastModifiedBy")
  materialLastModified Material[] @relation("MaterialLastModifiedBy")
  recipeLastModified   Recipe[]   @relation("RecipeLastModifiedBy")

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([subeId])
  @@index([rol])
  @@index([aktif])
}

enum PersonelRol {
  GENEL_MUDUR
  SUBE_MUDURU
  URETIM_MUDURU
  SEVKIYAT_MUDURU
  CEP_DEPO_MUDURU
  SUBE_PERSONELI
  URETIM_PERSONEL
  SEVKIYAT_PERSONELI
  SOFOR
  PERSONEL
}

enum SgkDurumu {
  VAR
  YOK
}

enum ErpDurum {
  AKTIF
  PASIF
}

// ===================================================================
// 🏢 BRANCH & LOCATION MANAGEMENT
// ===================================================================

model Sube {
  id  Int      @id @default(autoincrement())
  ad  String   @unique
  kod String   @unique // SB001, SB002, OP001, vb.
  tip SubeTipi @default(SATIS_SUBESI)

  // Contact Info
  adres   String?
  telefon String?
  email   String?
  sorumlu String?

  // Operational Info
  aktif       Boolean @default(true)
  acilisSaat  String? // "08:00"
  kapanisSaat String? // "22:00"

  // Relations
  personeller         User[]
  siparisler          Siparis[]
  hedefSiparisler     Siparis[]      @relation("HedefSube")
  neredenSiparisler   Siparis[]      @relation("SubeNereden")   // Şubeden şubeye siparişlerde nereden
  nereyeSiparisler    Siparis[]      @relation("SubeNereye")    // Şubeden şubeye siparişlerde nereye
  kaynakTransferler   StokTransfer[] @relation("KaynakSube")
  hedefTransferler    StokTransfer[] @relation("HedefSube")

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([kod])
  @@index([tip])
  @@index([aktif])
}

enum SubeTipi {
  SATIS_SUBESI
  OPERASYON_BIRIMI
  URETIM_MERKEZI
  DEPO
}

// ===================================================================
// 🏷️ PRODUCT MANAGEMENT (CSV Based)
// ===================================================================

model UrunKategori {
  id       Int     @id @default(autoincrement())
  ad       String  @unique
  kod      String  @unique
  aciklama String?
  aktif    Boolean @default(true)

  // Relations
  urunler Urun[]

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([aktif])
}

model Urun {
  id  Int    @id @default(autoincrement())
  ad  String @unique
  kod String @unique // UR001, UR002, vb. (CSV'den)

  // Basic Info
  kategoriId Int?
  kategori   UrunKategori? @relation(fields: [kategoriId], references: [id])
  aciklama   String?

  // Fiyat ilişkisi - SABIT FİYAT KALDIRILDI!
  fiyatlar         UrunFiyat[]     // Tüm tarihsel fiyatlar
  
  // Güncel fiyat için computed field kullanılacak
  // getCurrentPrice(tarih?: Date) function ile alınacak
  
  // Status
  aktif       Boolean @default(true)
  satisaUygun Boolean @default(true)

  // Inventory Info
  mevcutStok    Float       @default(0)
  minStokSeviye Float       @default(0)
  birim         SatisBirimi @default(KG)

  // Production Info - Bu alanlar maliyet hesaplama için ÖNEMLİ
  maliyetFiyati    Float?    @default(0) // Hesaplanan maliyet
  karMarji         Float?    @default(0) // Kar marjı (Güncel Fiyat - Maliyet)
  karOrani         Float?    @default(0) // Kar oranı %
  guncellemeTarihi DateTime? // Maliyet güncellenme tarihi

  // Relations
  receteler        Recipe[]
  siparisKalemleri SiparisKalemi[]
  stokHareketleri  StokHareket[]
  stokTransferleri StokTransfer[]  @relation("UrunTransfer")

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int?
  updatedBy Int?

  // PERSONEL TAKİP SİSTEMİ - YENİ!
  lastModifiedBy       String? // Son değiştiren personelin ID'si
  lastModifiedPersonel User?     @relation("UrunLastModifiedBy", fields: [lastModifiedBy], references: [personelId])
  lastModifiedAt       DateTime? // Son değişiklik tarihi
  lastAction           String? // Son yapılan işlem ("FİYAT_GÜNCELLENDİ", "STK_DEĞİŞTİ", vb.)

  @@index([kategoriId])
  @@index([kod])
  @@index([aktif])
  @@index([satisaUygun])
}

enum SatisBirimi {
  KG
  GRAM
  ADET
  PAKET
  KUTU
  TEPSI
  LITRE
  ML
}

// ===================================================================
// 💰 YENİ FİYATLANDIRMA SİSTEMİ - TARİHSEL TAKİP
// ===================================================================

// Ürün Fiyatları - Tarihsel Takip ile
model UrunFiyat {
  id     Int  @id @default(autoincrement())
  urunId Int
  urun   Urun @relation(fields: [urunId], references: [id], onDelete: Cascade)

  // Fiyat Bilgileri
  kgFiyati     Float        // CSV'deki KG FİYATI
  birim        SatisBirimi  @default(KG)
  fiyatTipi    FiyatTipi    @default(NORMAL)

  // TARİHSEL TAKİP - ÇOK ÖNEMLİ!
  baslangicTarihi DateTime     // Bu fiyatın geçerli olduğu başlangıç tarihi
  bitisTarihi     DateTime?    // Bu fiyatın geçersiz olduğu tarih (NULL = hala geçerli)
  
  // Durum Kontrolü
  aktif        Boolean      @default(true)

  // Kim Ne Zaman Ekledi/Değiştirdi
  createdAt    DateTime     @default(now())
  createdBy    String?      // Personel ID'si
  updatedAt    DateTime     @updatedAt
  updatedBy    String?      // Son güncelleyen personel ID'si
  
  // Zam/İndirim Sebepleri
  degisiklikSebebi String?   // "GENEL ZAM", "MALZEME ZAMMI", "KAMPANYA" vb.
  eskiFiyat        Float?    // Önceki fiyat (karşılaştırma için)
  yuzdelik         Float?    // Değişim yüzdesi

  @@unique([urunId, baslangicTarihi, fiyatTipi])
  @@index([aktif])
  @@index([baslangicTarihi])
  @@index([bitisTarihi])
}

// Tepsi/Tava Fiyatları - Ayrı Sistem
model TepsiFiyat {
  id           Int        @id @default(autoincrement())
  tepsiTavaId  Int
  tepsiTava    TepsiTava  @relation(fields: [tepsiTavaId], references: [id], onDelete: Cascade)

  // Fiyat Bilgileri
  adetFiyati      Float        // CSV'deki Adet Fiyatı
  fiyatTipi       FiyatTipi    @default(NORMAL)
  
  // TARİHSEL TAKİP
  baslangicTarihi DateTime     
  bitisTarihi     DateTime?    
  
  // Durum Kontrolü
  aktif           Boolean      @default(true)
  
  // Kim Ne Zaman
  createdAt       DateTime     @default(now())
  createdBy       String?
  updatedAt       DateTime     @updatedAt
  updatedBy       String?
  
  // Değişiklik Takibi
  degisiklikSebebi String?
  eskiFiyat        Float?
  yuzdelik         Float?
  
  @@unique([tepsiTavaId, baslangicTarihi, fiyatTipi])
  @@index([aktif])
  @@index([baslangicTarihi])
}

enum FiyatTipi {
  NORMAL
  KAMPANYA
  TOPTAN
  PERAKENDE
  OZEL_FIYAT
  PROMOSYON
  INDIRIMLI
}

// ===================================================================
// 📦 PACKAGING MANAGEMENT (CSV Based)
// ===================================================================



model TepsiTava {
  id       Int     @id @default(autoincrement())
  ad       String  @unique
  kod      String  @unique // TP001, TP002, vb. (CSV'den)
  aciklama String?
  
  // Fiyat ilişkisi - SABIT FİYAT KALDIRILDI!
  fiyatlar         TepsiFiyat[]    // Tüm tarihsel fiyatlar
  
  // Fiziksel Özellikler
  agirlik  Float? // gram
  boyut    String? // "1 Li", "2 Li", vb.
  malzeme  String? // Aluminum, Plastic
  aktif    Boolean @default(true)

  // Relations
  siparisKalemleri SiparisKalemi[]

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([kod])
  @@index([aktif])
}

model Kutu {
  id       Int     @id @default(autoincrement())
  ad       String  @unique
  kod      String  @unique // KT001, KT002, vb. (CSV'den)
  aciklama String?
  fiyat    Float?  @default(0)
  agirlik  Float? // gram
  boyutlar Json? // {en, boy, yukseklik}
  aktif    Boolean @default(true)

  // Relations
  siparisKalemleri SiparisKalemi[]

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([kod])
  @@index([aktif])
}

// ===================================================================
// 👥 CUSTOMER MANAGEMENT (CSV Based)
// ===================================================================

model Cari {
  id          Int     @id @default(autoincrement())
  ad          String
  soyad       String?
  musteriKodu String  @unique // MS000001, MS000002, vb. (CSV'den)

  // Contact Info
  telefon   String?
  email     String?
  adres     String? // Ana adres (backward compatibility için)
  il        String?
  ilce      String?
  postaKodu String?

  // Business Info
  cariGrubu  String? // CSV'den
  fiyatGrubu String? // CSV'den
  irtibatAdi String? // CSV'den
  subeAdi    String? // CSV'den

  // Account Info
  tipi         CariTipi @default(MUSTERI)
  vergiNo      String?
  vergiDairesi String?

  // Financial Info
  krediLimiti Float? @default(0)
  riskLimiti  Float? @default(0)
  bakiye      Float  @default(0)

  // Status
  aktif Boolean @default(true)

  // Relations
  // REMOVED relations - only using CariMusteri now
  
  // REMOVED: old relations - not needed anymore

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // PERSONEL TAKİP SİSTEMİ - YENİ!
  lastModifiedBy       String? // Son değiştiren personelin ID'si
  lastModifiedPersonel User?     @relation("CariLastModifiedBy", fields: [lastModifiedBy], references: [personelId])
  lastModifiedAt       DateTime? // Son değişiklik tarihi
  lastAction           String? // Son yapılan işlem ("BİLGİ_GÜNCELLENDİ", "KREDİ_LİMİTİ_DEĞİŞTİ", vb.)

  @@index([musteriKodu])
  @@index([tipi])
  @@index([aktif])
}

// YENİ MODEL: Cari Adres Yönetimi
model CariAdres {
  id     Int  @id @default(autoincrement())
  
  // REMOVED: Ana Cari relation - only using CariMusteri now
  
  // CariMusteri relation - CSV'den gelen müşteriler için
  cariMusteriId Int?
  cariMusteri   CariMusteri? @relation(fields: [cariMusteriId], references: [id], onDelete: Cascade)

  // Adres Bilgileri
  tip          AdresTipi @default(DIGER)
  adres        String
  il           String?
  ilce         String?
  mahalle      String?
  postaKodu    String?
  tarif        String? // Ek açıklama/tarif

  // Durum
  varsayilan   Boolean @default(false) // Ana adres mi?
  aktif        Boolean @default(true)

  // Audit
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([cariMusteriId])
  @@index([tip])
  @@index([varsayilan])
}

enum AdresTipi {
  EV
  IS
  DIGER
}

enum CariTipi {
  MUSTERI
  TEDARIKCI
  PERSONEL
  BANKA
  KASA
}

// CSV'den gelen Cari Müşteri verileri için ayrı model
model CariMusteri {
  id          Int     @id @default(autoincrement())
  cariAdi     String  // "CARİ ADI" sütunu
  musteriKodu String  @unique // "MÜŞTERİ KODU" sütunu
  
  // CSV'den gelen ek bilgiler
  subeAdi     String? // "ŞUBE ADI" sütunu (SALON, İBRAHİMLİ, OTOGAR, HİTİT, ESKİ OTOGAR)
  telefon     String? // "TEL" sütunu  
  irtibatAdi  String? // "İRTİBAT ADI" sütunu
  cariGrubu   String? // "CARİ GRUBU" sütunu
  fiyatGrubu  String? // "FİYAT GRUBU" sütunu
  
  // Durum
  aktif       Boolean @default(true)
  
  // REMOVED: Old Cari relation - using only CariMusteri now
  
  // Relations
  adresler    CariAdres[]
  siparisler  Siparis[] // Orders by this customer
  hareketler  CariHareket[] // Financial movements
  odemeler    CariOdeme[] // Payment records
  
  // Audit
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([musteriKodu])
  @@index([subeAdi])
  @@index([aktif])
}

// REMOVED: CariMusteriRelation - not needed anymore

// ===================================================================
// 📋 ORDER MANAGEMENT (Best Practice)
// ===================================================================

model TeslimatTuru {
  id              Int     @id @default(autoincrement())
  ad              String  @unique
  kod             String  @unique // TT001, TT002, vb. (CSV'den)
  aciklama        String?
  varsayilanKargo Float?  @default(0)
  aktif           Boolean @default(true)

  // Relations
  siparisler Siparis[]

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([kod])
  @@index([aktif])
}

model Siparis {
  id        Int    @id @default(autoincrement())
  siparisNo String @unique @default(uuid())

  // Date Info
  tarih        DateTime  
  teslimTarihi DateTime?
  teslimSaati  String?    // "14:30" format - API feature requirement 

  // Customer Info  
  cariId Int?
  cari   CariMusteri? @relation(fields: [cariId], references: [id])

  // Manual Customer (CSV'den Gönderen/Alıcı)
  gonderenAdi   String
  gonderenTel   String
  gonderenEmail String?
  aliciAdi      String?
  aliciTel      String?
  aliciEmail    String?

  // Address
  teslimatAdresi String?
  il             String?
  ilce           String?
  postaKodu      String?

  // Order Details
  teslimatTuruId Int
  teslimatTuru   TeslimatTuru @relation(fields: [teslimatTuruId], references: [id])
  subeId         Int?
  sube           Sube?        @relation(fields: [subeId], references: [id])

  // Financial - BEST PRACTICE ALANLARI
  araToplam         Float @default(0) // Kalemler toplamı
  kdvToplam         Float @default(0) // KDV tutarı
  kargoUcreti       Float @default(0) // Kargo ücreti
  digerHizmetTutari Float @default(0) // Diğer hizmetler
  toplamTutar       Float @default(0) // Final tutar

  // MALİYET HESAPLAMA ALANLARI - YENİ!
  toplamMaliyet           Float?    @default(0) // Hesaplanan toplam maliyet
  karMarji                Float?    @default(0) // Kar marjı (Tutar - Maliyet)
  karOrani                Float?    @default(0) // Kar oranı %
  maliyetGuncellemeTarihi DateTime? // Maliyet hesaplama tarihi

  // İNDİRİM ALANLARI - NULLABLE (API UYUMLULUĞU)
  indirimTutari Float? @default(0) // İndirim tutarı
  indirimSebebi String? // İndirim sebebi açıklaması

  // Status
  durum       SiparisDurumu @default(ONAY_BEKLEYEN)
  kargoDurumu KargoDurumu   @default(ADRESE_TESLIMAT)
  
  // Payment Status - API feature requirement
  odemeDurumu String? @default("bekliyor") // bekliyor, kismi, tamamlandi, iptal

  // Cargo Info
  kargoSirketi String?
  kargoTakipNo String?
  kargoNotu    String?
  kargoTarihi  DateTime?

  // Transfer (Şubeler arası) - YENİ SISTEM
  hedefSubeId   Int?
  hedefSube     Sube? @relation("HedefSube", fields: [hedefSubeId], references: [id])
  subeNeredenId Int?  // Nereden şube (şubeden şubeye transfer için)
  subeNereyeId  Int?  // Nereye şube (şubeden şubeye transfer için)
  subeNereden   Sube? @relation("SubeNereden", fields: [subeNeredenId], references: [id])
  subeNereye    Sube? @relation("SubeNereye", fields: [subeNereyeId], references: [id])

  // Notes
  siparisNotu  String?
  ozelTalepler String?
  dahiliNotlar String?

  // Priority
  oncelik OncelikSeviyesi @default(NORMAL)
  acilmi  Boolean         @default(false)

  // Relations
  kalemler   SiparisKalemi[]
  odemeler   CariOdeme[]
  hareketler CariHareket[]

  // Audit - KİM NEYİ NE ZAMAN YAPTI TAKİBİ
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  createdBy       Int?
  olusturan       User?     @relation("SiparisOlusturan", fields: [createdBy], references: [id])
  onaylayanId     Int?
  onaylayan       User?     @relation("SiparisOnaylayan", fields: [onaylayanId], references: [id])
  onaylanmaTarihi DateTime?

  // PERSONEL TAKİP SİSTEMİ - YENİ!
  lastModifiedBy       String? // Son değiştiren personelin ID'si
  lastModifiedPersonel User?     @relation("SiparisLastModifiedBy", fields: [lastModifiedBy], references: [personelId])
  lastModifiedAt       DateTime? // Son değişiklik tarihi
  lastAction           String? // Son yapılan işlem ("ONAYLANDI", "GÜNCELLENDİ", vb.)

  @@index([durum])
  @@index([kargoDurumu])
  @@index([cariId])
  @@index([tarih])
  @@index([createdAt])
  @@index([toplamMaliyet]) // Maliyet sorguları için
}

enum SiparisDurumu {
  ONAY_BEKLEYEN // Sipariş alındı, onay bekleniyor
  HAZIRLLANACAK // Onaylandı, hazırlanacak
  HAZIRLANDI // Hazırlandı, stoktan düşüldü
  IPTAL // İptal edildi
}

enum KargoDurumu {
  KARGOYA_VERILECEK // Kargoya verilecek
  KARGODA // Kargoda
  TESLIM_EDILDI // Teslim edildi
  SUBEYE_GONDERILECEK // Şubeye gönderilecek  
  SUBEDE_TESLIM // Şubede teslim
  ADRESE_TESLIMAT // Adrese teslimat
  SUBEDEN_SUBEYE // Şubeden şubeye
  IPTAL // İptal
}

enum OncelikSeviyesi {
  DUSUK
  NORMAL
  YUKSEK
  ACIL
}

model SiparisKalemi {
  id        Int     @id @default(autoincrement())
  siparisId Int
  siparis   Siparis @relation(fields: [siparisId], references: [id], onDelete: Cascade)

  // Product Info
  urunId   Int
  urun     Urun    @relation(fields: [urunId], references: [id])
  urunAdi  String // Snapshot
  urunKodu String? // Snapshot

  // Quantity & Pricing
  miktar      Float
  birim       SatisBirimi
  birimFiyat  Float
  kdvOrani    Float       @default(18)
  iskonto     Float       @default(0)
  araToplam   Float // miktar * birimFiyat
  kdvTutari   Float // araToplam * kdvOrani / 100
  toplamTutar Float // araToplam + kdvTutari - iskonto

  // MALİYET HESAPLAMA ALANLARI - YENİ!
  birimMaliyet  Float? @default(0) // Hesaplanan birim maliyet
  toplamMaliyet Float? @default(0) // Hesaplanan toplam maliyet
  karMarji      Float? @default(0) // Kar marjı (kalem bazında)
  karOrani      Float? @default(0) // Kar oranı % (kalem bazında)

  // Packaging - Sadece TepsiTava ve Kutu kullanılıyor
  tepsiTavaId Int?
  tepsiTava   TepsiTava? @relation(fields: [tepsiTavaId], references: [id])
  kutuId      Int?
  kutu        Kutu?      @relation(fields: [kutuId], references: [id])

  // Production
  uretimNotu String?

  // Relations
  stokHareketleri StokHareket[]

  @@index([siparisId])
  @@index([urunId])
  @@index([birimMaliyet]) // Maliyet sorguları için
}

// ===================================================================
// 🧾 RECIPE & COST CALCULATION (CSV Based)
// ===================================================================

model Material {
  id    Int            @id @default(autoincrement())
  ad    String         @unique
  kod   String         @unique // HM001, HM002, YM001, vb. (CSV'den)
  tipi  MaterialTipi
  birim MaterialBirimi @default(KG)

  // Pricing (CSV'den Son Fiyat)
  birimFiyat Float? @default(0)

  // Stock Info
  mevcutStok    Float  @default(0)
  minStokSeviye Float  @default(0)
  maxStokSeviye Float?
  kritikSeviye  Float  @default(10)

  // Properties
  aciklama         String?
  tedarikci        String?
  rafOmru          Int? // gün
  saklamaKosullari String?
  aktif            Boolean @default(true)

  // Relations
  receteIcerikleri RecipeIngredient[]
  stokHareketleri  StokHareket[]
  stokTransferleri StokTransfer[]     @relation("MaterialTransfer")

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // PERSONEL TAKİP SİSTEMİ - YENİ!
  lastModifiedBy       String? // Son değiştiren personelin ID'si
  lastModifiedPersonel User?     @relation("MaterialLastModifiedBy", fields: [lastModifiedBy], references: [personelId])
  lastModifiedAt       DateTime? // Son değişiklik tarihi
  lastAction           String? // Son yapılan işlem ("FİYAT_GÜNCELLENDİ", "STOK_SAYIMI", vb.)

  @@index([kod])
  @@index([tipi])
  @@index([aktif])
}

enum MaterialTipi {
  HAMMADDE // HM001, HM002, vb.
  YARI_MAMUL // YM001, YM002, vb.
  YARDIMCI_MADDE
}

enum MaterialBirimi {
  KG
  GRAM
  LITRE
  ML
  ADET
  PAKET
}

model Recipe {
  id  Int    @id @default(autoincrement())
  ad  String @unique
  kod String @unique

  // Product Relation
  urunId Int?
  urun   Urun? @relation(fields: [urunId], references: [id])

  // Recipe Details
  aciklama        String?
  porsiyon        Float?  @default(1) // Kaç porsiyon için
  hazirlamaSuresi Int? // Dakika
  pisirmeSuresi   Int? // Dakika

  // Instructions
  hazirlanisi Json? // Adım adım talimatlar
  notlar      String?

  // MALİYET HESAPLAMA - YENİ!
  toplamMaliyet    Float?    @default(0) // Hesaplanan toplam maliyet
  birimMaliyet     Float?    @default(0) // Kg başına maliyet
  guncellemeTarihi DateTime? // Son hesaplama tarihi

  // Status
  aktif    Boolean @default(true)
  test     Boolean @default(false)
  versiyon String  @default("1.0")

  // Relations
  icerikelek RecipeIngredient[]

  // Audit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy Int?

  // PERSONEL TAKİP SİSTEMİ - YENİ!
  lastModifiedBy       String? // Son değiştiren personelin ID'si
  lastModifiedPersonel User?     @relation("RecipeLastModifiedBy", fields: [lastModifiedBy], references: [personelId])
  lastModifiedAt       DateTime? // Son değişiklik tarihi
  lastAction           String? // Son yapılan işlem ("REÇETE_GÜNCELLENDİ", "MALİYET_HESAPLANDI", vb.)

  @@unique([urunId, versiyon])
  @@index([aktif])
  @@index([urunId])
}

model RecipeIngredient {
  id         Int      @id @default(autoincrement())
  recipeId   Int
  recipe     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  // Quantity (CSV'den)
  miktar Float // Net Miktar
  birim  MaterialBirimi

  // Fire Calculations (CSV'den)
  fire1       Float? @default(0) // Fire oranı 1 (0-1 arası)
  fire2       Float? @default(0) // Fire oranı 2 (0-1 arası)
  gerMiktar   Float? @default(0) // Fire hesaplı gerçek miktar
  gerMiktarTB Float? @default(0) // Talep bazında gerçek miktar

  // Cost Calculation (CSV'den)
  sonFiyat Float? @default(0) // Material birim fiyatı
  maliyet  Float? @default(0) // Hesaplanan maliyet (miktar * fiyat)

  // Instructions
  hazirlamaNotu      String? // "ince doğranmış", "kaynatılmış"
  zorunlu            Boolean @default(true)
  alternatifOlabilir Boolean @default(false)
  siraNo             Int? // Kullanım sırası

  @@unique([recipeId, materialId])
  @@index([recipeId])
  @@index([materialId])
}

// ===================================================================
// 📊 STOCK MANAGEMENT
// ===================================================================

model StokHareket {
  id Int @id @default(autoincrement())

  // Item Reference
  urunId     Int?
  urun       Urun?     @relation(fields: [urunId], references: [id])
  materialId Int?
  material   Material? @relation(fields: [materialId], references: [id])

  // Movement Details
  tip    StokHareketTipi
  miktar Float
  birim  String

  // Financial Impact
  birimMaliyet  Float? @default(0) // Hareket anındaki maliyet
  toplamMaliyet Float? @default(0) // Toplam maliyet etkisi

  // Reference Documents
  siparisKalemiId Int?
  siparisKalemi   SiparisKalemi? @relation(fields: [siparisKalemiId], references: [id])
  transferId      Int?
  transfer        StokTransfer?  @relation(fields: [transferId], references: [id])

  // Additional Info
  aciklama   String?
  referansNo String? // Fiş no, fatura no

  // Stock Levels
  oncekiStok  Float?
  sonrakiStok Float?

  // Audit
  createdAt DateTime @default(now())
  createdBy Int?
  user      User?    @relation(fields: [createdBy], references: [id])

  @@index([tip])
  @@index([urunId])
  @@index([materialId])
  @@index([createdAt])
}

enum StokHareketTipi {
  GIRIS
  CIKIS
  TRANSFER
  FIRE
  SAYIM_FAZLA
  SAYIM_EKSIK
  URETIM_GIRDI
  URETIM_CIKTI
  IADE
  DUZELTME
}

model StokTransfer {
  id         Int    @id @default(autoincrement())
  transferNo String @unique @default(uuid())

  // Transfer Details
  kaynakSubeId Int?
  kaynakSube   Sube? @relation("KaynakSube", fields: [kaynakSubeId], references: [id])
  hedefSubeId  Int?
  hedefSube    Sube? @relation("HedefSube", fields: [hedefSubeId], references: [id])

  // Items
  urunId     Int?
  urun       Urun?     @relation("UrunTransfer", fields: [urunId], references: [id])
  materialId Int?
  material   Material? @relation("MaterialTransfer", fields: [materialId], references: [id])

  miktar   Float
  birim    String
  aciklama String?

  // Cost Tracking
  birimMaliyet  Float? @default(0)
  toplamMaliyet Float? @default(0)

  // Status
  durum          TransferDurumu @default(BEKLIYOR)
  gonderimTarihi DateTime?
  teslimTarihi   DateTime?

  // Relations
  stokHareketleri StokHareket[]

  // Audit
  createdAt    DateTime @default(now())
  createdBy    Int?
  olusturan    User?    @relation("StokTransferOlusturan", fields: [createdBy], references: [id])
  gonderenId   Int?
  gonderen     User?    @relation("StokTransferGonderen", fields: [gonderenId], references: [id])
  teslimAlanId Int?
  teslimAlan   User?    @relation("StokTransferTeslimAlan", fields: [teslimAlanId], references: [id])

  @@index([durum])
  @@index([kaynakSubeId])
  @@index([hedefSubeId])
}

enum TransferDurumu {
  BEKLIYOR
  GONDERILDI
  TESLIM_ALINDI
  IPTAL
}

// ===================================================================
// 💳 FINANCIAL MANAGEMENT (CSV Based)
// ===================================================================

model CariHareket {
  id            Int  @id @default(autoincrement())
  cariMusteriId Int
  cariMusteri   CariMusteri @relation(fields: [cariMusteriId], references: [id])

  // Transaction Details
  tip      HareketTipi
  tutar    Float
  aciklama String?

  // Document Reference
  siparisId Int?
  siparis   Siparis?   @relation(fields: [siparisId], references: [id])
  odemeId   Int?
  odeme     CariOdeme? @relation(fields: [odemeId], references: [id])

  // Document Info
  belgeNo     String?
  belgeTarihi DateTime? 

  // Balance Tracking
  oncekiBakiye  Float?
  sonrakiBakiye Float?

  // Audit
  createdAt DateTime @default(now())
  createdBy Int?
  user      User?    @relation(fields: [createdBy], references: [id])

  @@index([cariMusteriId])
  @@index([tip])
  @@index([createdAt])
}

enum HareketTipi {
  BORC
  ALACAK
  VIRMAN
}

model CariOdeme {
  id            Int  @id @default(autoincrement())
  cariMusteriId Int
  cariMusteri   CariMusteri @relation(fields: [cariMusteriId], references: [id])

  // Payment Details
  tutar        Float
  odemeYontemi OdemeYontemi
  aciklama     String?

  // Document Reference  
  siparisId Int?
  siparis   Siparis? @relation(fields: [siparisId], references: [id])

  // Payment Info
  odemeTarihi DateTime  
  vadeTarihi  DateTime? 

  // Bank/Check Info
  bankaAdi  String?
  hesapNo   String?
  cekNo     String?
  cekTarihi DateTime? 

  // Status
  durum OdemeDurumu @default(ODENDI)

  // Relations
  hareketler CariHareket[]

  // Audit
  createdAt DateTime @default(now())
  createdBy Int?
  user      User?    @relation(fields: [createdBy], references: [id])

  @@index([cariMusteriId])
  @@index([odemeYontemi])
  @@index([durum])
  @@index([odemeTarihi])
}

enum OdemeYontemi {
  NAKIT // OY001 (CSV'den)
  KREDI_KARTI // OY002
  CARI // OY003
  CEK // OY004
  BANKA_HAVALESI // OY005
  IKRAM // OY006
}

enum OdemeDurumu {
  ODENDI
  BEKLIYOR
  GECIKTI
  IPTAL
}

// ===================================================================
// 📝 AUDIT & LOGGING SYSTEM
// ===================================================================

model AuditLog {
  id Int @id @default(autoincrement())

  // Kim yaptı?
  personelId String?
  personel   User?   @relation("PersonelAuditLogs", fields: [personelId], references: [personelId])

  // Neyi yaptı?
  action    AuditAction // CREATE, UPDATE, DELETE, APPROVE, CANCEL, vb.
  tableName String // "Siparis", "Urun", "Material", vb.
  recordId  String // Değiştirilen kaydın ID'si

  // Ne değiştirdi?
  oldValues   Json? // Eski değerler (UPDATE için)
  newValues   Json? // Yeni değerler (CREATE/UPDATE için)
  description String? // "Sipariş onaylandı", "Ürün fiyatı güncellendi", vb.

  // Sistem bilgileri
  ipAddress String?
  userAgent String?
  sessionId String?

  // Timing
  timestamp DateTime @default(now())

  @@index([personelId])
  @@index([tableName])
  @@index([recordId])
  @@index([timestamp])
  @@index([action])
}

enum AuditAction {
  // CRUD Operations
  CREATE
  UPDATE
  DELETE

  // Business Actions
  APPROVE // Sipariş onaylama
  CANCEL // Sipariş iptal
  COMPLETE // Sipariş tamamlama
  TRANSFER // Stok transfer
  PAYMENT // Ödeme

  // Login/Security
  LOGIN
  LOGIN_SUCCESS
  LOGIN_FAILED
  LOGOUT
  PASSWORD_CHANGE
  PERMISSION_CHANGE

  // Bulk Operations
  BULK_UPDATE
  BULK_DELETE
  IMPORT
  EXPORT
}

// ===================================================================
// ⚙️ SYSTEM SETTINGS
// ===================================================================

model SystemSetting {
  id          Int             @id @default(autoincrement())
  key         String          @unique
  value       String
  dataType    SettingDataType @default(STRING)
  category    String?
  description String?
  updatedAt   DateTime        @updatedAt
  updatedBy   Int?
}

enum SettingDataType {
  STRING
  NUMBER
  BOOLEAN
  JSON
}
