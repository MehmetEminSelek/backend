{
    "info": {
        "name": "OG Auth Tests",
        "description": "Backend auth system tests",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000/api"
        },
        {
            "key": "accessToken",
            "value": ""
        }
    ],
    "item": [
        {
            "name": "üîê Authentication Tests",
            "item": [
                {
                    "name": "1. Login - VIEWER (baris.gullu)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "// Token'ƒ± kaydet",
                                    "if (pm.response.code === 200) {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.collectionVariables.set('accessToken', jsonData.accessToken);",
                                    "    ",
                                    "    // Test sonu√ßlarƒ±",
                                    "    pm.test('Login ba≈üarƒ±lƒ±', function () {",
                                    "        pm.expect(jsonData.success).to.be.true;",
                                    "    });",
                                    "    ",
                                    "    pm.test('User rol√º VIEWER', function () {",
                                    "        pm.expect(jsonData.user.rol).to.eql('VIEWER');",
                                    "    });",
                                    "    ",
                                    "    pm.test('Role level 30 (VIEWER)', function () {",
                                    "        pm.expect(jsonData.user.roleLevel).to.eql(30);",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"kullaniciAdi\": \"baris.gullu\",\n  \"sifre\": \"bar123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        }
                    }
                },
                {
                    "name": "2. Validate Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Token ge√ßerli', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.success).to.be.true;",
                                    "    pm.expect(jsonData.tokenValid).to.be.true;",
                                    "});",
                                    "",
                                    "pm.test('User bilgileri mevcut', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.user).to.have.property('username');",
                                    "    pm.expect(jsonData.user).to.have.property('rol');",
                                    "    pm.expect(jsonData.user).to.have.property('roleLevel');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"token\": \"{{accessToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/validate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "validate"
                            ]
                        }
                    }
                },
                {
                    "name": "3. Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "logout"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üìä Role-Based Access Tests",
            "item": [
                {
                    "name": "1. Dropdown - All Data (VIEWER)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Response 200 OK', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('VIEWER - Teslimat t√ºrleri eri≈üilebilir', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.have.property('teslimatTurleri');",
                                    "});",
                                    "",
                                    "pm.test('VIEWER - Kategoriler eri≈üilebilir', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.have.property('kategoriler');",
                                    "});",
                                    "",
                                    "pm.test('VIEWER - ≈ûubeler YASAKLI (roleLevel < 50)', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.not.have.property('subeler');",
                                    "});",
                                    "",
                                    "pm.test('VIEWER - √ñdeme y√∂ntemleri YASAKLI (roleLevel < 60)', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.not.have.property('odemeYontemleri');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/dropdown",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dropdown"
                            ]
                        }
                    }
                },
                {
                    "name": "2. Dropdown - Specific Category (teslimat)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Sadece teslimat t√ºrleri d√∂nd√º', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.have.property('teslimatTurleri');",
                                    "    pm.expect(jsonData.data).to.not.have.property('kategoriler');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/dropdown?category=teslimat",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dropdown"
                            ],
                            "query": [
                                {
                                    "key": "category",
                                    "value": "teslimat"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "3. Dropdown - Forbidden Category (cariler)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('VIEWER - Cariler eri≈üim YOK (roleLevel < 50)', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.data).to.not.have.property('cariler');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/dropdown?category=cariler",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dropdown"
                            ],
                            "query": [
                                {
                                    "key": "category",
                                    "value": "cariler"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "üîç Error Handling Tests",
            "item": [
                {
                    "name": "1. Login - Yanlƒ±≈ü ≈ûifre",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Login ba≈üarƒ±sƒ±z - 401', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});",
                                    "",
                                    "pm.test('Hata mesajƒ± var', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('error');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"kullaniciAdi\": \"baris.gullu\",\n  \"sifre\": \"yanlƒ±≈ü-≈üifre\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        }
                    }
                },
                {
                    "name": "2. Dropdown - Token Yok",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Token yok - 401', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});",
                                    "",
                                    "pm.test('Auth hatasƒ±', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.code).to.eql('INVALID_TOKEN');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/dropdown",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dropdown"
                            ]
                        }
                    }
                },
                {
                    "name": "3. Dropdown - Ge√ßersiz Kategori",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Ge√ßersiz kategori - 400', function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});",
                                    "",
                                    "pm.test('Allowed categories listesi var', function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('allowedCategories');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/dropdown?category=invalid-category",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "dropdown"
                            ],
                            "query": [
                                {
                                    "key": "category",
                                    "value": "invalid-category"
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}